from IPython.display import clear_output

#The board & positions
def display_board(board):
    #clear_output()

    print(board[7]+' | '+board[8]+' | '+board[9])
    print('--| - |--')
    print(board[4]+' | '+board[5]+' | '+board[6])
    print('--| - |--')
    print(board[1]+' | '+board[2]+' | '+board[3])

# Input
def player_input():
    marker = ''
    
    while not (marker == 'X' or marker == 'O'):
        marker = input('Player 1: Do you want to be X or O? ').upper()

    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X') 

#Placing markers
def place_marker(board, marker, position):
    
    board[position] = marker


# Checking if anyone won
def win_check(board,mark):
    
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or # across the top
    (board[4] == mark and board[5] == mark and board[6] == mark) or # across the middle
    (board[1] == mark and board[2] == mark and board[3] == mark) or # across the bottom
    (board[7] == mark and board[4] == mark and board[1] == mark) or # down the middle
    (board[8] == mark and board[5] == mark and board[2] == mark) or # down the middle
    (board[9] == mark and board[6] == mark and board[3] == mark) or # down the right side
    (board[7] == mark and board[5] == mark and board[3] == mark) or # diagonal
    (board[9] == mark and board[5] == mark and board[1] == mark)) # diagonal

# Random dice to decide who goes first
import random

def choose_first():
    return random.randint(1,2)

# Checking if there's space
def space_check(board, position):
    return board[position] == ' '

# Checking the full board
def full_board_check(board):
    for i in range(1, 10):
        if space_check(board, i):
            return False
    return True
        
def player_choice(board):
    position = 0
    
    while position not in [1, 2, 3, 4, 5, 6, 7, 8, 9] or not space_check(board, position):
        position = int(input('Choose your next position: (1-9) '))
        
    return position

def replay():
    
    return input('Do you want to play again? Enter Yes or No: ').lower().startswith('y')

# Gameplay
print('Welcome to Tic Tac Toe!')

while True:
    game_board = [' ']*10
    player1_marker, player2_marker = player_input()
    first_player = choose_first()
    if first_player == 1:
        player1 = 'Player 1'
        player2 = 'Player 2'
    else:
        player1 = 'Player 2'
        player2 = 'Player 1'
    print(f'{player1} will go first.')
    
    play_game = input('Ready to play? Type Yes or No: ')
        
    if play_game == 'Yes':
        game_on = True
        

    while game_on:
        if first_player == 1:
            display_board(game_board)
            position = player_choice(game_board)
            place_marker(game_board, player1_marker, position)
            if win_check(game_board, player1_marker):
                display_board(game_board)
                print(f'{player1} has won!')
                game_on = False
            elif full_board_check(game_board):
                display_board(game_board)
                print("The game is a tie")
                game_on = False
            else:
                display_board(game_board)
                print(f'{player2}\'s turn.')
                position = player_choice(game_board)
                place_marker(game_board, player2_marker, position)
                if win_check(game_board, player2_marker):
                    display_board(game_board)
                    print(f'{player2} has won!')
                    game_on = False
                elif full_board_check(game_board):
                    display_board(game_board)
                    print("The game is a tie")
                    game_on = False
        else:
            display_board(game_board)
            position = player_choice(game_board)
            place_marker(game_board, player2_marker, position)
            if win_check(game_board, player2_marker):
                display_board(game_board)
                print(f'{player2} has won!')
                game_on = False
            elif full_board_check(game_board):
                display_board(game_board)
                print("The game is a tie")
                game_on = False
            else:
                display_board(game_board)
                print(f'{player1}\'s turn.')
                position = player_choice(game_board)
                place_marker(game_board, player1_marker, position)
                if win_check(game_board, player1_marker):
                    display_board(game_board)
                    print(f'{player1} has won!')
                    game_on = False
                elif full_board_check(game_board):
                    display_board(game_board)
                    print("The game is a tie")
                    game_on = False
            


    if not replay():
        break